{"version":3,"sources":["App.js","redux/actions/index.js","reportWebVitals.js","redux/reducer/Counter.js","redux/reducer/IsLogged.js","redux/reducer/index.js","index.js"],"names":["App","classes","makeStyles","theme","paper","height","padding","spacing","display","textAlign","alignItems","justifyContent","background","flexDirection","borderRadius","boxShadow","root","marginTop","typography","color","signUpBtn","resetBtn","count","textTransform","red","title","width","filter","fontSize","useStyles","counter","useSelector","state","counterReducer","isLogged","isLoggedReducer","dispatch","useDispatch","Container","Grid","container","justify","item","xs","lg","className","Paper","square","Typography","ButtonGroup","disableElevation","variant","Button","onClick","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","allReducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59715fc5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport {\n    increment,\n    decrement,\n    isLoggedAction,\n    resetCounter,\n} from \"./redux/actions\";\n\nfunction App() {\n    const useStyles = makeStyles((theme) => ({\n        paper: {\n            height: \"100%\",\n            padding: theme.spacing(0),\n            display: \"flex\",\n            textAlign: \"center\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"#2b2b2b\",\n            flexDirection: \"column\",\n            borderRadius: \"10px\",\n            boxShadow: \"0 10px 20px 3px black\",\n        },\n\n        root: {\n            height: 350,\n            padding: theme.spacing(2),\n            marginTop: \"30vh\",\n        },\n\n        typography: {\n            color: \"#fff\",\n        },\n\n        signUpBtn: {\n            marginTop: \"1rem\",\n        },\n        resetBtn: {\n            marginTop: \"1rem\",\n        },\n\n        count: {\n            padding: \"1rem 0\",\n            textTransform: \"capitalize\",\n            color: \"lightblue\",\n        },\n        red: {\n            color: \"red\",\n        },\n\n        title: {\n            width: \"100%\",\n            textAlign: \"center\",\n            padding: \"2rem 0\",\n            filter: \"drop-shadow( 0px 5px 5px  black)\",\n            fontSize:\"3rem\"\n        },\n    }));\n\n    const classes = useStyles();\n    const counter = useSelector((state) => state.counterReducer);\n    const isLogged = useSelector((state) => state.isLoggedReducer);\n\n    const dispatch = useDispatch();\n    // console.log(isLogged);\n    return (\n        <>\n            <Container>\n                <Grid\n                    container\n                    spacing={1}\n                    justify=\"space-around\"\n                    alignItems=\"center\"\n                >\n                    <Grid item xs={12} lg={6} className={classes.root}>\n                        <h1 className={classes.title}>Redux Counter Example</h1>\n                        <Paper square className={classes.paper}>\n                            <Typography className={classes.typography}>\n                                {isLogged ? \"logged in successfully!\" : \"\"}\n                            </Typography>\n                            <h1 className={classes.count}>\n                                counter:\n                                <span className={classes.red}>\n                                    {\" \"}\n                                    {counter}\n                                </span>{\" \"}\n                            </h1>\n                            <ButtonGroup disableElevation variant=\"contained\">\n                                <Button\n                                    onClick={() => dispatch(increment())}\n                                    color={\"primary\"}\n                                >\n                                    Increment\n                                </Button>\n\n                                <Button\n                                    onClick={() => dispatch(decrement())}\n                                    color={\n                                        counter >= 0 ? \"secondary\" : \"default\"\n                                    }\n                                >\n                                    Decrement\n                                </Button>\n                            </ButtonGroup>\n                            <Button\n                                className={classes.resetBtn}\n                                variant=\"contained\"\n                                onClick={() => dispatch(resetCounter())}\n                                color=\"inherit\"\n                            >\n                                Reset\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                onClick={() => dispatch(isLoggedAction())}\n                                color={\"secondary\"}\n                                className={classes.signUpBtn}\n                            >\n                                {isLogged ? \"signIn\" : \"signUp\"}\n                            </Button>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n\nexport default App;\n","export const increment = () => {\r\n    return {\r\n        type: \"INCREMENT\",\r\n    };\r\n};\r\n\r\nexport const decrement = () => {\r\n    return {\r\n        type: \"DECREMENT\",\r\n    };\r\n};\r\nexport const resetCounter = () => {\r\n    return {\r\n        type: \"RESET\",\r\n    };\r\n};\r\n\r\nexport const isLoggedAction = () => {\r\n    return {\r\n        type: \"SIGN_IN\",\r\n    };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const counterReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case \"INCREMENT\":\r\n            return state + 1;\r\n        case \"DECREMENT\":\r\n            return state - 1;\r\n        case \"RESET\":\r\n            return (state = 0);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default counterReducer;\r\n","const isLoggedReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case \"SIGN_IN\":\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default isLoggedReducer;","import { combineReducers } from \"redux\";\r\nimport counterReducer from \"./Counter\";\r\nimport isLoggedReducer from \"./IsLogged\";\r\nconst allReducers = combineReducers({\r\n    counterReducer,\r\n    isLoggedReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducers from \"./redux/reducer/\";\n\nconst store = createStore(\n    allReducers,\n    // Comment next line for disable devtools\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}